<?php
class AutoCode extends BaseModel {
    public function tableName()
    {
        return '{{autocode}}'; // TODO: Change the autogenerated stub
    }
    /*** Returns the static model of the specified AR class. */
    public static function model($className = __CLASS__) {
        return parent::model($className);
    }
    /**  * 模型关联规则  */
    public function relations() {
        return array();
    }
    /*** 模型验证规则*/
    public function rules() {
      return $this->attributeRule();
    }
    /** * 属性标签 */
    public function attributeLabels() {
        return $this->getAttributeSet();
    }
    public function attributeSets() {
        return array(
       
        'auto_id' => '内部id',
        'auto_code'=>'序号',
       
        );
      

     //x2_scourse,id,code,value,subjectsetting,subpic,id,x2_scourse;id;code;value;subjectsetting;subpic;id;
    }
    
   /*public function picLabels() {
        return 'subpic';//图片或文件
    }  
   public  function pathLabels(){tem
   }
  
   /* 用于列表查询使用，三个参数分别是  1 条件 2 是排序 三是或取值，格式 变量[：变量]*/
   /* public function keySelect(){
        return array('1','auto_id','');
    }*/
    public function getnumber(){
         //$d1=date('Y-m-d');
        $temp='1';
        if(empty($temp)){
            $temp=new AutoCode ;
            $temp->auto_code=0;
         }
         $temp->auto_code=$temp->auto_code+1;
         $temp->save();
         //put_msg( $temp->attributes);
              //put_msg('0000'.$temp->data.'='.substr('0000'.$temp->data,-4, 4));
         //return str_replace('-','',''.date('Y-m-d')).substr('0000'.$temp->data,-4, 4);
         //return substr('0000'.$temp->auto_code,-4,4);
         return $temp->auto_code;
    }
}
   